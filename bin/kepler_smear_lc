import numpy as np
import matplotlib.pyplot as plt

from time import time as clock

from argparse import ArgumentParser
from keplersmear.smear_tools import *
from smearcorrection import *

from matplotlib import rcParams
rcParams.update({'figure.autolayout': True})

import matplotlib as mpl 
mpl.style.use('seaborn-colorblind')

'''----------------------------------------------------
kepler_smear_lc.py - generate a Kepler smear light curve
----------------------------------------------------'''

if __name__ == '__main__':
	ap = ArgumentParser()
	ap.add_argument('--quarter', type = int,default=2, help = 'quarter')
	ap.add_argument('--name', type = str, default = 'test', \
					help = 'star name to save')
	ap.add_argument('--smear-type', type = str, default = None, \
					help = 'which smear to use')
	ap.add_argument('--cat-file', type = str, default='kepler_inputs.csv',help = 'list of targets')
	ap.add_argument('--do-plot', action = 'store_true', default = False, \
					help = 'produce plots')
	ap.add_argument('--do-all', action = 'store_true', default = False, \
					help = 'do all quarters')
	ap.add_argument('--just-stitch',action='store_true', default = False, \
					help='just stitch together quarters without recalculating')
	ap.add_argument('--sig-clip',action='store_true', default = True, \
					help='sigma clip before correcting with CBVs')

	args = ap.parse_args()

	smear_name = lambda s: '' if s is None else str(s)

	quarter = args.quarter
	name = args.name
	do_plot = args.do_plot 
	smear_type = args.smear_type
	cat_file = args.cat_file
	sig_clip = args.sig_clip

	out_dir = 'kepler_smear/'
	cbvdir = '/kepler/kepler/FITS/'
	gap_file = 'kepler_bad_cads.csv'

	if args.do_all:
		quarters = range(18)
	else:
		quarters = [quarter]

	starttime = clock()
	if not args.just_stitch:
		for quarter in quarters:
			try:
				lc = do_target(name,quarter,cat_file=cat_file,out_dir=out_dir,
					cbvdir=cbvdir,smear_type=smear_type,do_plot=do_plot,
					gap_file=gap_file,sig_clip=sig_clip)
				lc.write('%s%s_smear_q%d%s.csv' % (out_dir,name,quarter,smear_name(smear_type)))

				print 'Saved to %s%s_smear_q%d%s.csv' % (out_dir,name,quarter,smear_name(smear_type))
			except:
				print '\nFailed on Quarter %d' % quarter

			print_time(clock()-starttime)

	print 'Now doing the full lightcurve!'

	newlc = stitch_lcs(out_dir,name,smear_type,do_plot=do_plot)

	newlc.write('%s%s_smear_full%s.csv' % (out_dir,name,smear_name(smear_type)))
	print 'Saved lightcurve to %s%s_smear_full%s.csv' % (out_dir,name,smear_name(smear_type))

	print_time(clock()-starttime)