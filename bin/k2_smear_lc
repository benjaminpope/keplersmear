import numpy as np
import matplotlib.pyplot as plt

from time import time as clock

from argparse import ArgumentParser
from keplersmear.smear_tools import *
from smearcorrection import *

from matplotlib import rcParams
rcParams.update({'figure.autolayout': True})

import matplotlib as mpl 
mpl.style.use('seaborn-colorblind')

'''----------------------------------------------------
k2_smear_lc.py - generate a Kepler smear light curve
----------------------------------------------------'''

if __name__ == '__main__':
	ap = ArgumentParser()
	ap.add_argument('epic', type = str, help = 'star name to save')
	ap.add_argument('--campaign', type = str, default='C05',help = 'campaign')
	ap.add_argument('--cat-file', type = str, default='C05_smear.csv',help = 'campaign list')
	ap.add_argument('--smear-type', type = str, default = None, \
					help = 'which smear to use')
	ap.add_argument('--do-plot', action = 'store_true', default = False, \
					help = 'produce plots')
	ap.add_argument('--do-all', action = 'store_true', default = False, \
					help = 'produce plots')


	args = ap.parse_args()

	campaign = args.campaign
	epic = args.epic
	do_plot = args.do_plot 
	smear_type = args.smear_type
	do_all = args.do_all
	cat_file = args.cat_file

	out_dir = '%s_smear/' % campaign

	if do_all:
		tab = Table.read(cat_file)
		epics = list(tab['EPIC'][:])
	else:
		epics = [epic]

	print epics 

	starttime = clock()

	for epic in epics:
		epic = str(epic)
		try:
			lc = do_target(name,quarter,cat_file=cat_file,out_dir=out_dir,
					cbvdir=cbvdir,smear_type=smear_type,do_plot=do_plot,
					gap_file=gap_file,sig_clip=sig_clip)
			lc.write('%s%s%s_smear%s.fits' % (out_dir,campaign,epic,smear_name(smear_type)),
				overwrite=True)

			print '\nSaved to %s%s%s_smear%s.csv' % (out_dir,campaign,epic,smear_name(smear_type))
			print '\nSaved to %s%s%s_smear%s.fits too!' % (out_dir,campaign,epic,smear_name(smear_type))
		except:
			print '\nFailed on EPIC %s' % epic

	print_time(clock()-starttime)